@use "variables" as variable;

@mixin media($breakpoint) {
  @if $breakpoint == "xs" {
    @media (min-width: map-get(variable.$grid-breakpoints, xs)) {
      @content;
    }
  } @else if $breakpoint == "sm" {
    @media (min-width: map-get(variable.$grid-breakpoints, sm)) {
      @content;
    }
  } @else if $breakpoint == "md" {
    @media (min-width: map-get(variable.$grid-breakpoints, md)) {
      @content;
    }
  } @else if $breakpoint == "lg" {
    @media (min-width: map-get(variable.$grid-breakpoints, lg)) {
      @content;
    }
  } @else if $breakpoint == "xl" {
    @media (min-width: map-get(variable.$grid-breakpoints, xl)) {
      @content;
    }
  } @else if $breakpoint == "xxl" {
    @media (min-width: map-get(variable.$grid-breakpoints, xxl)) {
      @content;
    }
  } @else {
    @error "Invalid breakpoint: #{$breakpoint}.";
  }
}

@mixin container {
  width: 100%;
  margin: 0 auto;
  padding: 0 20px;
  
  @include media("sm") {
    max-width: calc(map-get(variable.$grid-breakpoints, sm) - 20px);
  }
  
  @include media("md") {
    max-width: calc(map-get(variable.$grid-breakpoints, md) - 20px);
  }
  
  @include media("lg") {
    max-width: calc(map-get(variable.$grid-breakpoints, lg) - 20px);
  }
  
  @include media("xl") {
    max-width: calc(map-get(variable.$grid-breakpoints, xl) - 20px);
  }
  
  @include media("xxl") {
    max-width: calc(map-get(variable.$grid-breakpoints, xxl) - 20px);
  }
}

@mixin CTABorder($direction){
  font-family: field-gothic-compact, "Franklin Gothic Medium", "Arial Narrow", Arial, sans-serif;
  font-weight: 900;
  font-size: 2.8rem;
  color: variable.$primary-lingh-color;
  text-transform: uppercase;
  background-color: variable.$secondary-colors;  
  transition: background 400ms ease-in ;
  &:hover{
    background-color: variable.$secondary-colors-dark;
  }
  @include media(md){
    font-size: 3.8rem
  }
  @if $direction == "right-botton" {
    @content;
    padding: 8px 30px 4px;
    border-radius: 20.81px 20.81px 20.81px 0px;
  }
  @if $direction == "left-top" {
    @content;
  }
}